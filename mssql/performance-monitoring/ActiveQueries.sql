SELECT DISTINCT der.blocking_session_id, d.[name] AS [db_name]  , der.[session_id]  , CASE s.[hostname] WHEN '' THEN NULL ELSE s.[hostname] END AS [host]  , s.[loginame] AS [login_name]  , CASE s.[program_name] WHEN '' THEN NULL ELSE s.[program_name] END AS [program_name]  , der.[command]  , der.[total_elapsed_time], (der.[total_elapsed_time]/1000) AS totalElapsedTimeInSeconds, (der.[total_elapsed_time]/60000) AS totalElapsedTimeInMinutes, CASE WHEN s.stmt_start = 0 AND s.stmt_end = 0 THEN CONVERT(NVARCHAR(MAX), der.command) ELSE SUBSTRING(dest.text, (CASE WHEN s.stmt_start = -1 THEN 0 ELSE s.stmt_start END / 2 + 1), (CASE WHEN s.stmt_end = -1 THEN DATALENGTH(dest.text) ELSE s.stmt_end - s.stmt_start END ) / 2 + 1) END AS sqlStatement, dest.[text] AS batchText, der.[reads]  , der.[writes]  , der.[logical_reads]  , der.[cpu_time]  , der.[start_time]  , der.[status]  , der.[wait_type]  , der.[wait_time]  , der.[last_wait_type]  , der.[blocking_session_id] FROM sys.dm_exec_requests der WITH (NOLOCK)  JOIN sys.[sysprocesses] s WITH (NOLOCK) ON der.[session_id] = s.[spid]  JOIN sys.[databases] d WITH (NOLOCK) ON der.[database_id] = d.[database_id]  OUTER APPLY sys.[dm_exec_sql_text](der.[sql_handle]) dest WHERE ISNULL(dest.[text], '') NOT LIKE '%FROM sys.dm_exec_requests der%'  AND d.[name] NOT IN ('master','msdb') AND ISNULL(der.command, '') NOT IN ('DB STARTUP', 'PARALLEL REDO TASK', 'PARALLEL REDO HELP TASK') ORDER BY  der.blocking_session_id DESC , der.[session_id]